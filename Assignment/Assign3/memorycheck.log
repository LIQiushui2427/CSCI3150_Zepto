==13056== Memcheck, a memory error detector
==13056== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13056== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==13056== Command: ./Scheduler
==13056== 
Process number: 5
36 10 10
1023 10 160
123 60 90
13 70 100
12 80 28

Queue number: 3
Period: 300
0 60 120
1 40 80
2 10 30

current_time: 0
next_process_id: 0
active_queue: -1
QUEUE2 0x04a52c60
QUEUE2 FIRST 0x00000000

EnQueue: 36
EnQueue: 1023
current_time: 10
next_process_id: 2
active_queue: 2
QUEUE2 0x04a52c60
QUEUE2 FIRST 0x04a544a0
task found in active queue 2.
ACTIVE QUEUE 0x04a52c60
Process1023 Process36 
==13056== Conditional jump or move depends on uninitialised value(s)
==13056==    at 0x109944: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==  Uninitialised value was created by a heap allocation
==13056==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13056==    by 0x109471: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056== 
Task 1023 remains in active queue.
==13056== Invalid write of size 8
==13056==    at 0x10AB3A: AddTail (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109A49: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==  Address 0x4a55778 is 0 bytes after a block of size 8 alloc'd
==13056==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13056==    by 0x10AB26: AddTail (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109A49: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056== 
==13056== Invalid write of size 8
==13056==    at 0x10AB42: AddTail (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109A49: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==  Address 0x4a55780 is 8 bytes after a block of size 8 alloc'd
==13056==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13056==    by 0x10AB26: AddTail (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109A49: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056== 
==13056== Invalid write of size 4
==13056==    at 0x10AB49: AddTail (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109A49: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==  Address 0x4a55788 is 16 bytes after a block of size 8 alloc'd
==13056==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==13056==    by 0x10AB26: AddTail (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109A49: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056== 
==13056== Invalid write of size 8
==13056==    at 0x10AB50: AddTail (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109A49: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==  Address 0x4a55798 is 24 bytes after a block of size 16 in arena "client"
==13056== 

valgrind: m_mallocfree.c:305 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 80, hi = 0.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==13056==    at 0x58046FFA: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==13056==    by 0x58047127: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==13056==    by 0x580472CB: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==13056==    by 0x580514B4: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==13056==    by 0x5803DE9A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==13056==    by 0x5803CD9F: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==13056==    by 0x58041F04: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==13056==    by 0x5803C1D8: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==13056==    by 0x58017AF4: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==13056==    by 0x1008DDC9E0: ???
==13056==    by 0x1008CA9F2F: ???
==13056==    by 0x1008CA9F17: ???
==13056==    by 0x1008CA9F2F: ???
==13056==    by 0x1008CA9F3F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 13056)
==13056==    at 0x10ADFB: LlistPrint (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109A6C: scheduler (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
==13056==    by 0x109D3C: main (in /home/zepto/CSCI3150/Assignment/Assign3/Scheduler)
client stack range: [0x1FFEFFD000 0x1FFF000FFF] client SP: 0x1FFEFFF8D0
valgrind stack range: [0x1008BAA000 0x1008CA9FFF] top usage: 9480 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.